name: Deploy apps
on:
  push:
    branches:
      - master
    paths:
      - 'pub-app/**'
      - 'sub-app/**'
      - 'helm/**'
  workflow_dispatch:

jobs:
  pub-build: # These two jobs are nearly identical, might want to merge them to a matrix
    runs-on: ubuntu-22.04
    name: Build Docker image
    concurrency:
      group: pub-build
      cancel-in-progress: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy requirements.txt
        run: cp requirements.txt ./pub-app/
        
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./pub-app/
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/pub-sandbox:latest

  sub-build:
    runs-on: ubuntu-22.04
    name: Build Docker image
    concurrency:
      group: sub-build
      cancel-in-progress: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy requirements.txt
        run: cp requirements.txt ./sub-app/
        
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./sub-app/
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/sub-sandbox:latest

  helm:
    needs: [pub-build, sub-build]
    runs-on: arc-fph # Using a self-hosted runner so I don't have to punch holes in my firewall
    name: Deploy apps
    environment: prod
    concurrency:
      group: helm
      cancel-in-progress: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Helm
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
          curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
          sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
          echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl

          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm

      - name: Inject kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" > kubeconfig

      - name: Install/upgrade project
        run: helm upgrade --install pubsub ./helm